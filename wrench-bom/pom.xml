<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>xyz.zhp</groupId>
    <artifactId>wrench-bom</artifactId>
    <version>1.0-SNAPSHOT</version>


    <name>wrench-bom</name>
    <description>wrench modules design framework</description>
    <url>https://github.com/zhp1221/wrench-component</url>

    <licenses>
        <license>
            <name>Apache License</name>
            <url>https://opensource.org/license/apache-2-0/</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>ossrh</id>
            <name>zhp</name>
            <email>zhanghp1221@126.com</email>
            <url>https://github.com/zhp1221</url>
            <organization>zhp-wrench</organization>
            <organizationUrl>https://github.com/zhp1221/wrench-component</organizationUrl>
            <roles>
                <role>Project Manager</role>
                <role>Developer</role>
            </roles>
            <timezone>Asia/Hangzhou</timezone>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/zhp1221/wrench-component.git</connection>
        <developerConnection>scm:git:https://github.com/zhp1221/wrench-component.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/zhp1221/wrench-component</url>
    </scm>


    <packaging>pom</packaging>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>xyz.zhp.wrench</groupId>
                <artifactId>wrench-starter-dynamic-config-center</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>xyz.zhp.wrench</groupId>
                <artifactId>wrench-starter-design-framwork</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

<!--    <build>-->
    <!--        <pluginManagement>-->
    <!--            <plugins>-->
    <!--                <plugin>-->
    <!--                    <groupId>org.apache.maven.plugins</groupId>-->
    <!--                    <artifactId>maven-invoker-plugin</artifactId>-->
    <!--                    <version>3.5.1</version>-->
    <!--                    <configuration>-->
    <!--                        <writeJunitReport>true</writeJunitReport>-->
    <!--                        <cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>-->
    <!--                        <pomIncludes>-->
    <!--                            <pomInclude>*/pom.xml</pomInclude>-->
    <!--                        </pomIncludes>-->
    <!--                        <preBuildHookScript>setup</preBuildHookScript>-->
    <!--                        <postBuildHookScript>verify</postBuildHookScript>-->
    <!--                        <localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>-->
    <!--                        <settingsFile>src/it/settings.xml</settingsFile>-->
    <!--                        <properties>-->
    <!--                            <centralBaseUrl>http://localhost:${mockcentral.port}</centralBaseUrl>-->
    <!--                            <centralSnapshotsUrl>http://localhost:${mockcentral.port}/snapshots/</centralSnapshotsUrl>-->
    <!--                        </properties>-->
    <!--                        <goals>-->
    <!--                            <goal>deploy</goal>-->
    <!--                        </goals>-->
    <!--                    </configuration>-->
    <!--                    <executions>-->
    <!--                        <execution>-->
    <!--                            <id>integration-test</id>-->
    <!--                            <goals>-->
    <!--                                <goal>install</goal>-->
    <!--                                <goal>integration-test</goal>-->
    <!--                                <goal>verify</goal>-->
    <!--                            </goals>-->
    <!--                        </execution>-->
    <!--                    </executions>-->
    <!--                </plugin>-->
    <!--                <plugin>-->
    <!--                    <groupId>org.codehaus.plexus</groupId>-->
    <!--                    <artifactId>plexus-component-metadata</artifactId>-->
    <!--                    <version>2.1.1</version>-->
    <!--                </plugin>-->
    <!--                <plugin>-->
    <!--                    <groupId>org.apache.maven.plugins</groupId>-->
    <!--                    <artifactId>maven-plugin-plugin</artifactId>-->
    <!--                    <version>3.8.2</version>-->
    <!--                    <configuration>-->
    <!--                        <goalPrefix>central-publishing</goalPrefix>-->
    <!--                    </configuration>-->
    <!--                </plugin>-->
    <!--                <plugin>-->
    <!--                    <groupId>org.codehaus.mojo</groupId>-->
    <!--                    <artifactId>build-helper-maven-plugin</artifactId>-->
    <!--                    <version>3.4.0</version>-->
    <!--                    <configuration>-->
    <!--                        <portNames>-->
    <!--                            <portName>mockcentral.port</portName>-->
    <!--                        </portNames>-->
    <!--                    </configuration>-->
    <!--                    <executions>-->
    <!--                        <execution>-->
    <!--                            <id>reserve-network-port</id>-->
    <!--                            <goals>-->
    <!--                                <goal>reserve-network-port</goal>-->
    <!--                            </goals>-->
    <!--                            <phase>pre-integration-test</phase>-->
    <!--                        </execution>-->
    <!--                    </executions>-->
    <!--                </plugin>-->
    <!--                <plugin>-->
    <!--                    <groupId>io.fabric8</groupId>-->
    <!--                    <artifactId>docker-maven-plugin</artifactId>-->
    <!--                    <version>0.43.0</version>-->
    <!--                    <configuration>-->
    <!--                        <logDate>ISO8601</logDate>-->
    <!--                        <verbose>false</verbose>-->
    <!--                        &lt;!&ndash; set to true for logging requests &ndash;&gt;-->
    <!--                        <showLogs>false</showLogs>-->
    <!--                        <images>-->
    <!--                            <image>-->
    <!--                                <alias>mockcentral</alias>-->
    <!--                                <name>mockserver/mockserver:5.15.0</name>-->
    <!--                                <run>-->
    <!--                                    <namingStrategy>alias</namingStrategy>-->
    <!--                                    <ports>-->
    <!--                                        <port>${mockcentral.port}:1080</port>-->
    <!--                                    </ports>-->
    <!--                                    <wait>-->
    <!--                                        <http>-->
    <!--                                            <url>http://localhost:${mockcentral.port}</url>-->
    <!--                                            &lt;!&ndash; 404 means that the mockserver is running, just not accepting the request &ndash;&gt;-->
    <!--                                            <status>404</status>-->
    <!--                                        </http>-->
    <!--                                        <time>10000</time>-->
    <!--                                    </wait>-->
    <!--                                </run>-->
    <!--                            </image>-->
    <!--                        </images>-->
    <!--                    </configuration>-->
    <!--                    <executions>-->
    <!--                        <execution>-->
    <!--                            <id>start</id>-->
    <!--                            <goals>-->
    <!--                                <goal>start</goal>-->
    <!--                            </goals>-->
    <!--                            <phase>pre-integration-test</phase>-->
    <!--                        </execution>-->
    <!--                        <execution>-->
    <!--                            <id>stop</id>-->
    <!--                            <goals>-->
    <!--                                <goal>stop</goal>-->
    <!--                            </goals>-->
    <!--                            <phase>post-integration-test</phase>-->
    <!--                        </execution>-->
    <!--                    </executions>-->
    <!--                </plugin>-->
    <!--                <plugin>-->
    <!--                    <groupId>org.codehaus.mojo</groupId>-->
    <!--                    <artifactId>exec-maven-plugin</artifactId>-->
    <!--                    <version>3.1.0</version>-->
    <!--                    <executions>-->
    <!--                        <execution>-->
    <!--                            <id>mockserver-config</id>-->
    <!--                            <phase>pre-integration-test</phase>-->
    <!--                            <goals>-->
    <!--                                <goal>java</goal>-->
    <!--                            </goals>-->
    <!--                        </execution>-->
    <!--                    </executions>-->
    <!--                    <configuration>-->
    <!--                        <mainClass>org.sonatype.central.publisher.plugin.mockserver.MockserverConfiguration</mainClass>-->
    <!--                        <cleanupDaemonThreads>false</cleanupDaemonThreads>-->
    <!--                        <arguments>-->
    <!--                            <argument>${mockcentral.port}</argument>-->
    <!--                        </arguments>-->
    <!--                        <classpathScope>test</classpathScope>-->
    <!--                        <stopUnresponsiveDaemonThreads>true</stopUnresponsiveDaemonThreads>-->
    <!--                        <daemonThreadJoinTimeout>5000</daemonThreadJoinTimeout>-->
    <!--                    </configuration>-->
    <!--                </plugin>-->
    <!--            </plugins>-->
    <!--        </pluginManagement>-->
    <!--        <plugins>-->
    <!--            <plugin>-->
    <!--                <groupId>com.sonatype.clm</groupId>-->
    <!--                <artifactId>clm-maven-plugin</artifactId>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <goals>-->
    <!--                            <goal>index</goal>-->
    <!--                        </goals>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--            </plugin>-->
    <!--            <plugin>-->
    <!--                <groupId>org.codehaus.plexus</groupId>-->
    <!--                <artifactId>plexus-component-metadata</artifactId>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <goals>-->
    <!--                            <goal>generate-metadata</goal>-->
    <!--                            <goal>generate-test-metadata</goal>-->
    <!--                        </goals>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--            </plugin>-->
    <!--            <plugin>-->
    <!--                <groupId>org.apache.maven.plugins</groupId>-->
    <!--                <artifactId>maven-plugin-plugin</artifactId>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <goals>-->
    <!--                            <goal>descriptor</goal>-->
    <!--                            <goal>helpmojo</goal>-->
    <!--                        </goals>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--            </plugin>-->
    <!--        </plugins>-->
    <!--    </build>-->
    <!--    <profiles>-->
    <!--        &lt;!&ndash; IT profile for running ALL ITs, will spin up docker container of mockserver, configured to respond as though-->
    <!--             it was central, as well as using a random port for the exposed port from the docker container &ndash;&gt;-->
    <!--        <profile>-->
    <!--            <id>run-its</id>-->
    <!--            <build>-->
    <!--                <plugins>-->
    <!--                    &lt;!&ndash; don't forget that plugin ordering is very important-->
    <!--                         - get free port # (build-helper-maven-plugin)-->
    <!--                         - startup mockserver docker container (docker-maven-plugin)-->
    <!--                         - execute the java class to configure mockserver (exec-maven-pluign)-->
    <!--                         - and finally run the ITs (maven-invoker-plugin) &ndash;&gt;-->
    <!--                    <plugin>-->
    <!--                        <groupId>org.codehaus.mojo</groupId>-->
    <!--                        <artifactId>build-helper-maven-plugin</artifactId>-->
    <!--                    </plugin>-->
    <!--                    <plugin>-->
    <!--                        <groupId>io.fabric8</groupId>-->
    <!--                        <artifactId>docker-maven-plugin</artifactId>-->
    <!--                    </plugin>-->
    <!--                    <plugin>-->
    <!--                        <groupId>org.codehaus.mojo</groupId>-->
    <!--                        <artifactId>exec-maven-plugin</artifactId>-->
    <!--                    </plugin>-->
    <!--                    <plugin>-->
    <!--                        <groupId>org.apache.maven.plugins</groupId>-->
    <!--                        <artifactId>maven-invoker-plugin</artifactId>-->
    <!--                    </plugin>-->
    <!--                </plugins>-->
    <!--            </build>-->
    <!--        </profile>-->
    <!--        &lt;!&ndash; IT profile for running only ITs that require the docker container to be running, will spin up docker container-->
    <!--             of mockserver, configured to respond as though it was central, as well as using a random port for the exposed-->
    <!--             port from the docker container &ndash;&gt;-->
    <!--        <profile>-->
    <!--            <id>ossrh</id>-->
    <!--            <build>-->
    <!--                <plugins>-->
    <!--                    <plugin>-->
    <!--                        <groupId>org.codehaus.mojo</groupId>-->
    <!--                        <artifactId>build-helper-maven-plugin</artifactId>-->
    <!--                    </plugin>-->
    <!--                    &lt;!&ndash; don't forget that plugin ordering is very important-->
    <!--                         - get free port # (build-helper-maven-plugin)-->
    <!--                         - startup mockserver docker container (docker-maven-plugin)-->
    <!--                         - execute the java class to configure mockserver (exec-maven-pluign)-->
    <!--                         - and finally run the ITs (maven-invoker-plugin) &ndash;&gt;-->
    <!--                    <plugin>-->
    <!--                        <groupId>io.fabric8</groupId>-->
    <!--                        <artifactId>docker-maven-plugin</artifactId>-->
    <!--                    </plugin>-->
    <!--                    <plugin>-->
    <!--                        <groupId>org.codehaus.mojo</groupId>-->
    <!--                        <artifactId>exec-maven-plugin</artifactId>-->
    <!--                    </plugin>-->
    <!--                    <plugin>-->
    <!--                        <groupId>org.apache.maven.plugins</groupId>-->
    <!--                        <artifactId>maven-invoker-plugin</artifactId>-->
    <!--                        <configuration>-->
    <!--                            <pomIncludes>-->
    <!--                                <pomInclude>publish*/pom.xml</pomInclude>-->
    <!--                            </pomIncludes>-->
    <!--                        </configuration>-->
    <!--                    </plugin>-->
    <!--                </plugins>-->
    <!--            </build>-->
    <!--        </profile>-->
    <!--        &lt;!&ndash; IT profile for running only ITs that do NOT require the docker container to be running &ndash;&gt;-->
    <!--        <profile>-->
    <!--            <id>run-bundle-its</id>-->
    <!--            <build>-->
    <!--                <plugins>-->
    <!--                    <plugin>-->
    <!--                        <groupId>org.apache.maven.plugins</groupId>-->
    <!--                        <artifactId>maven-invoker-plugin</artifactId>-->
    <!--                        <configuration>-->
    <!--                            <pomIncludes>-->
    <!--                                <pomInclude>bundle*/pom.xml</pomInclude>-->
    <!--                            </pomIncludes>-->
    <!--                        </configuration>-->
    <!--                    </plugin>-->
    <!--                </plugins>-->
    <!--            </build>-->
    <!--        </profile>-->

    <!--        <profile>-->
    <!--            <id>publish</id>-->
    <!--            <build>-->
    <!--                <plugins>-->
    <!--                    &lt;!&ndash; included to disable inherited nexus-staging-maven-plugin execution &ndash;&gt;-->
    <!--                    <plugin>-->
    <!--                        <groupId>org.sonatype.plugins</groupId>-->
    <!--                        <artifactId>nexus-staging-maven-plugin</artifactId>-->
    <!--                        <version>1.6.13</version>-->
    <!--                        <extensions>true</extensions>-->
    <!--                        <configuration>-->
    <!--                            <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>-->
    <!--                        </configuration>-->
    <!--                    </plugin>-->
    <!--                    <plugin>-->
    <!--                        <groupId>org.apache.maven.plugins</groupId>-->
    <!--                        <artifactId>maven-javadoc-plugin</artifactId>-->
    <!--                        <version>3.5.0</version>-->
    <!--                        <executions>-->
    <!--                            <execution>-->
    <!--                                <id>attach-javadocs</id>-->
    <!--                                <goals>-->
    <!--                                    <goal>jar</goal>-->
    <!--                                </goals>-->
    <!--                            </execution>-->
    <!--                        </executions>-->
    <!--                    </plugin>-->
    <!--                    <plugin>-->
    <!--                        <groupId>org.apache.maven.plugins</groupId>-->
    <!--                        <artifactId>maven-source-plugin</artifactId>-->
    <!--                        <version>3.2.1</version>-->
    <!--                        <executions>-->
    <!--                            <execution>-->
    <!--                                <id>attach-sources</id>-->
    <!--                                <goals>-->
    <!--                                    <goal>jar-no-fork</goal>-->
    <!--                                </goals>-->
    <!--                            </execution>-->
    <!--                        </executions>-->
    <!--                    </plugin>-->
    <!--                    <plugin>-->
    <!--                        &lt;!&ndash; use our own just built version &ndash;&gt;-->
    <!--                        <groupId>${project.groupId}</groupId>-->
    <!--                        <artifactId>${project.artifactId}</artifactId>-->
    <!--                        <version>${project.version}</version>-->
    <!--                        <executions>-->
    <!--                            <execution>-->
    <!--                                <id>deploy-artifacts</id>-->
    <!--                                <phase>deploy</phase>-->
    <!--                                <goals>-->
    <!--                                    <goal>publish</goal>-->
    <!--                                </goals>-->
    <!--                            </execution>-->
    <!--                        </executions>-->
    <!--                        <extensions>true</extensions>-->
    <!--                        <configuration>-->
    <!--                            <publishingServerId>publisher</publishingServerId>-->
    <!--                            <centralBaseUrl>https://central.sonatype.com</centralBaseUrl>-->
    <!--                            <deploymentName>Central Publishing Maven Plugin - ${project.version}</deploymentName>-->
    <!--                            <checksums>required</checksums>-->
    <!--                            <skipPublishing>false</skipPublishing>-->
    <!--                        </configuration>-->
    <!--                    </plugin>-->
    <!--                </plugins>-->
    <!--            </build>-->
    <!--        </profile>-->

    <!--    </profiles> -->

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/**</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/**</include>
                </includes>
            </testResource>
        </testResources>
        <!--<plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <resources>
                        <resource>
                            <directory>src/main/resources</directory>
                            <filtering>false</filtering>
                        </resource>
                    </resources>
                </configuration>
            </plugin>

            &lt;!&ndash;   central发布插件    &ndash;&gt;
            <plugin>
                <groupId>org.sonatype.central</groupId>
                <artifactId>central-publishing-maven-plugin</artifactId>
                <version>0.4.0</version>
                <extensions>true</extensions>
                <configuration>
                    <publishingServerId>ossrh</publishingServerId>
                    <tokenAuth>true</tokenAuth>
&lt;!&ndash;                    <autoPublish>true</autoPublish>&ndash;&gt;
                </configuration>
            </plugin>

            &lt;!&ndash;   source源码插件 &ndash;&gt;
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            &lt;!&ndash;   javadoc插件 &ndash;&gt;
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
                    <charset>UTF-8</charset>
                    <encoding>UTF-8</encoding>
                    <docencoding>UTF-8</docencoding>
                    <additionalJOption>-Xdoclint:none</additionalJOption>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                            &lt;!&ndash;  /Library/Java/JavaVirtualMachines/jdk1.8.0_311.jdk/Contents/Home/bin/javadoc &ndash;&gt;
                            <javadocExecutable>${java.home}${file.separator}..${file.separator}bin${file.separator}javadoc</javadocExecutable>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>true</createDependencyReducedPom>
                            <dependencyReducedPomLocation>${project.build.directory}/${project.artifactId}-${project.version}.pom</dependencyReducedPomLocation>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            &lt;!&ndash;gpg加密&ndash;&gt;
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.5</version>
                <configuration>
                    &lt;!&ndash;指定用于签名的 GPG 密钥名称。&ndash;&gt;
                    <keyname>ossrh</keyname>
                </configuration>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>net.nicoulaj.maven.plugins</groupId>
                <artifactId>checksum-maven-plugin</artifactId>
                <version>1.10</version>
                <executions>
                    <execution>
                        <id>create-checksums</id>
                        <goals>
                            <goal>artifacts</goal>
                        </goals>
                        <configuration>
                            <algorithms>
                                <algorithm>MD5</algorithm>
                                <algorithm>SHA-1</algorithm>
                            </algorithms>
                            <attachChecksums>true</attachChecksums>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-pom-checksums</id>
                        <goals>
                            <goal>files</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>*.pom</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <algorithms>
                                <algorithm>MD5</algorithm>
                                <algorithm>SHA-1</algorithm>
                            </algorithms>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>-->
    </build>
</project>